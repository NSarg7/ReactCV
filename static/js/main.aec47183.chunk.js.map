{"version":3,"sources":["assets/img sync /^/.*/.png$","assets/img/budgety.png","assets/img/favicon.png","assets/img/forkify.png","assets/img/natours.png","assets/img/omnifood.png","assets/img/pig game.png","components/Header/Header.js","components/ShelfList/Shelf/Shelf.js","components/ShelfList/Content/Content.js","components/ShelfList/ShelfList.js","containers/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","header","props","className","shelf","onClick","showContent","name","content","target","href","src","require","toLowerCase","alt","text","shelfList","projects","project","key","Shelf","doesShow","Content","App","state","uniqid","projectIndex","findIndex","console","log","forEach","el","setState","this","Image","Header","ShelfList","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aec47183.chunk.js","sourcesContent":["var map = {\n\t\"./budgety.png\": 17,\n\t\"./favicon.png\": 18,\n\t\"./forkify.png\": 19,\n\t\"./natours.png\": 20,\n\t\"./omnifood.png\": 21,\n\t\"./pig game.png\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","module.exports = __webpack_public_path__ + \"static/media/budgety.8e806411.png\";","module.exports = __webpack_public_path__ + \"static/media/favicon.62459fb8.png\";","module.exports = __webpack_public_path__ + \"static/media/forkify.3ac8e946.png\";","module.exports = __webpack_public_path__ + \"static/media/natours.a797f42a.png\";","module.exports = __webpack_public_path__ + \"static/media/omnifood.e5d3fa39.png\";","module.exports = __webpack_public_path__ + \"static/media/pig game.dcf84480.png\";","import React from \"react\";\r\n\r\nconst header = props => {\r\n  return (\r\n    \r\n      <div className=\"title\">\r\n        <h1 className=\"greeting\">Welcome</h1>\r\n        <div className=\"title_bottom\">\r\n          <h2>\r\n            Below you can find my projects. <br />\r\n            <span className=\"title_bottom--span\">\r\n              Hint: By clicking on images in your browser will be opened the\r\n              original project.\r\n            </span>\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\n\r\nconst shelf = props => {\r\n\r\n  return (\r\n    <div className=\"Shelf\" onClick={() => props.showContent(props.id)}>\r\n      <li className=\"Shelf-title\">{props.name}</li>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default shelf;\r\n","import React from \"react\";\r\n\r\nconst content = props => {\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <a target=\"_blank\" href={`${props.name}/index.html`} className=\"pic\">\r\n        <img src={require(`../../../assets/img/${props.name.toLowerCase()}.png`)} alt={`Project ${props.name}`} />\r\n      </a>\r\n      <div className=\"text\">\r\n        <p className=\"inline-text\">{props.text}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default content;\r\n","import React from \"react\";\r\nimport Shelf from \"./Shelf/Shelf\";\r\nimport Content from \"./Content/Content\";\r\n\r\nconst shelfList = props => {\r\n  return (\r\n    <ul className=\"ShelfList\">\r\n      {props.projects.map(project => {\r\n        return (\r\n          <div key={project.id}>\r\n            <Shelf className=\"Shelf\" name={project.name} showContent={props.showContent} id={project.id} />\r\n            {/*TODO:*/} {project.doesShow ? <Content name={project.name} text={project.text} /> : null}\r\n          </div>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default shelfList;\r\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header/Header\";\nimport ShelfList from \"../components/ShelfList/ShelfList\";\nimport uniqid from \"uniqid\";\n\nclass App extends Component {\n  state = {\n    projects: [\n      {\n        id: uniqid(),\n        name: \"Omnifood\",\n        text: \"This is my very first HTML/CSS project. Initially for animations were used jQuery, but recently I have changed it with Vanilla JS(pure JS). So it became super fast.\",\n        doesShow: false\n      },\n\n      {\n        id: uniqid(),\n        name: \"Natours\",\n        text: \"My next HTML/CSS project to master CSS3, Sass, Flexbox and grid.<br>(ongoing)\",\n        doesShow: false\n      },\n\n      {\n        id: uniqid(),\n        name: \"Forkify\",\n        text: `Forkify is a real world project created within th course. Via ajax calls and 3rd party api you can get over 1000.000 food recipes. Logic was created via Vanilla JS(pure JS) using webpack and babel.(ongoing)`,\n        doesShow: false\n      },\n\n      {\n        id: uniqid(),\n        name: \"Pig Game\",\n        text: `Small and cool game created with Vanilla JS(pure JS). Rules are very simple to roll button how many time you want, but be careful from 1, in that case, you will be lost everything you have collected. If you want to save the current score, push button hold. And the turn is the next player's.`,\n        doesShow: false\n      },\n\n      {\n        id: uniqid(),\n        name: \"Budgety\",\n        text: `This will help you calculate your monthly income and expenses. To create this app was used JavaScript IIFE module pattern(to keep code private) and prototype inheritance.`,\n        doesShow: false\n      }\n    ]\n  };\n\n\n  componentDidMount() {\n    this.state.projects.map(project => {\n      const img = new Image();\n      img.src = `../assets/img/${project.name.toLowerCase()}`\n    })\n    console.log(\"componentDidMount\")\n  }\n\n\n\n  showContent = id => {\n    //Find project's index\n    let projectIndex = this.state.projects.findIndex(project => project.id === id);\n    // Copy projects from the state\n    let projects = [...this.state.projects]\n    let doesShow = !this.state.projects[projectIndex].doesShow;\n    console.log(doesShow)\n    // If doesShow true, show items\n    if (projects[projectIndex].doesShow) {\n      projects[projectIndex].doesShow = doesShow\n    } else {\n      //If false set all object's doesShow to false, after show the clicked project\n      projects.forEach(el => {\n        el.doesShow = false;\n      })\n      projects[projectIndex].doesShow = doesShow\n    }\n    this.setState({ projects: projects })\n  };\n\n\n\n\n  render() {\n    return (\n      <header className=\"App\">\n        <Header />\n        <ShelfList\n          projects={this.state.projects}\n          showContent={this.showContent}\n        />\n      </header>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}